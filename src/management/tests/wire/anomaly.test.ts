/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { ManagementClient } from "../../Client.js";

describe("Anomaly", () => {
    test("checkIfIpIsBlocked", async () => {
        const server = mockServerPool.createServer();
        const client = new ManagementClient({ token: "test", environment: server.baseUrl });

        server.mockEndpoint().get("/anomaly/blocks/ips/id").respondWith().statusCode(200).build();

        const response = await client.anomaly.checkIfIpIsBlocked("id");
        expect(response).toEqual(undefined);
    });

    test("deleteBlockedIp", async () => {
        const server = mockServerPool.createServer();
        const client = new ManagementClient({ token: "test", environment: server.baseUrl });

        server.mockEndpoint().delete("/anomaly/blocks/ips/id").respondWith().statusCode(200).build();

        const response = await client.anomaly.deleteBlockedIp("id");
        expect(response).toEqual(undefined);
    });
});
