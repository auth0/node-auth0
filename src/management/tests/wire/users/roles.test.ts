/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { ManagementClient } from "../../../Client.js";

describe("Roles", () => {
    test("assign", async () => {
        const server = mockServerPool.createServer();
        const client = new ManagementClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = { roles: ["roles"] };

        server.mockEndpoint().post("/users/id/roles").jsonBody(rawRequestBody).respondWith().statusCode(200).build();

        const response = await client.users.roles.assign("id", {
            roles: ["roles"],
        });
        expect(response).toEqual(undefined);
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new ManagementClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = { roles: ["roles"] };

        server.mockEndpoint().delete("/users/id/roles").jsonBody(rawRequestBody).respondWith().statusCode(200).build();

        const response = await client.users.roles.delete("id", {
            roles: ["roles"],
        });
        expect(response).toEqual(undefined);
    });
});
