/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { ManagementClient } from "../../../Client.js";

describe("Multifactor", () => {
    test("invalidateRememberBrowser", async () => {
        const server = mockServerPool.createServer();
        const client = new ManagementClient({ token: "test", environment: server.baseUrl });

        server
            .mockEndpoint()
            .post("/users/id/multifactor/actions/invalidate-remember-browser")
            .respondWith()
            .statusCode(200)
            .build();

        const response = await client.users.multifactor.invalidateRememberBrowser("id");
        expect(response).toEqual(undefined);
    });

    test("deleteProvider", async () => {
        const server = mockServerPool.createServer();
        const client = new ManagementClient({ token: "test", environment: server.baseUrl });

        server.mockEndpoint().delete("/users/id/multifactor/duo").respondWith().statusCode(200).build();

        const response = await client.users.multifactor.deleteProvider("id", "duo");
        expect(response).toEqual(undefined);
    });
});
