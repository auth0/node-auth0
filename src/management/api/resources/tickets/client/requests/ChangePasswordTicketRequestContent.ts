/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Management from "../../../../index.js";

/**
 * @example
 *     {}
 */
export interface ChangePasswordTicketRequestContent {
    /** URL the user will be redirected to in the classic Universal Login experience once the ticket is used. */
    result_url?: string;
    /** user_id of for whom the ticket should be created. */
    user_id?: string;
    /** ID of the client (application). If provided for tenants using the New Universal Login experience, the email template and UI displays application details, and the user is prompted to redirect to the application's <a target='' href='https://auth0.com/docs/authenticate/login/auth0-universal-login/configure-default-login-routes#completing-the-password-reset-flow'>default login route</a> after the ticket is used. client_id is required to use the <a target='' href='https://auth0.com/docs/customize/actions/flows-and-triggers/post-change-password-flow'>Password Reset Post Challenge</a> trigger. */
    client_id?: string;
    /** (Optional) Organization ID â€“ the ID of the Organization. If provided, organization parameters will be made available to the email template and organization branding will be applied to the prompt. In addition, the redirect link in the prompt will include organization_id and organization_name query string parameters. */
    organization_id?: string;
    /** ID of the connection. If provided, allows the user to be specified using email instead of user_id. If you set this value, you must also send the email parameter. You cannot send user_id when specifying a connection_id. */
    connection_id?: string;
    /** Email address of the user for whom the tickets should be created. Requires the connection_id parameter. Cannot be specified when using user_id. */
    email?: string;
    /** Number of seconds for which the ticket is valid before expiration. If unspecified or set to 0, this value defaults to 432000 seconds (5 days). */
    ttl_sec?: number;
    /** Whether to set the email_verified attribute to true (true) or whether it should not be updated (false). */
    mark_email_as_verified?: boolean;
    /** Whether to include the email address as part of the returnUrl in the reset_email (true), or not (false). */
    includeEmailInRedirect?: boolean;
    identity?: Management.Identity;
}
