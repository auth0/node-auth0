/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../../../environments.js";
import * as core from "../../../../../../core/index.js";
import { Connections } from "../resources/connections/client/Client.js";

export declare namespace Vault {
    export interface Options {
        environment?: core.Supplier<environments.ManagementEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token: core.Supplier<core.BearerToken>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
        fetcher?: core.FetchFunction;
    }
}

export class Vault {
    protected readonly _options: Vault.Options;
    protected _connections: Connections | undefined;

    constructor(_options: Vault.Options) {
        this._options = _options;
    }

    public get connections(): Connections {
        return (this._connections ??= new Connections(this._options));
    }
}
