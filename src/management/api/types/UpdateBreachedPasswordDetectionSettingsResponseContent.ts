/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Management from "../index.js";

export interface UpdateBreachedPasswordDetectionSettingsResponseContent {
    /** Whether or not breached password detection is active. */
    enabled?: boolean;
    /**
     * Action to take when a breached password is detected during a login.
     *       Possible values: <code>block</code>, <code>user_notification</code>, <code>admin_notification</code>.
     */
    shields?: UpdateBreachedPasswordDetectionSettingsResponseContent.Shields.Item[];
    /**
     * When "admin_notification" is enabled, determines how often email notifications are sent.
     *         Possible values: <code>immediately</code>, <code>daily</code>, <code>weekly</code>, <code>monthly</code>.
     */
    admin_notification_frequency?: UpdateBreachedPasswordDetectionSettingsResponseContent.AdminNotificationFrequency.Item[];
    /**
     * The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard.
     *         Possible values: <code>standard</code>, <code>enhanced</code>.
     */
    method?: UpdateBreachedPasswordDetectionSettingsResponseContent.Method;
    stage?: Management.BreachedPasswordDetectionStage;
}

export namespace UpdateBreachedPasswordDetectionSettingsResponseContent {
    export type Shields = Shields.Item[];

    export namespace Shields {
        export type Item = "block" | "user_notification" | "admin_notification";
        export const Item = {
            Block: "block",
            UserNotification: "user_notification",
            AdminNotification: "admin_notification",
        } as const;
    }

    export type AdminNotificationFrequency = AdminNotificationFrequency.Item[];

    export namespace AdminNotificationFrequency {
        export type Item = "immediately" | "daily" | "weekly" | "monthly";
        export const Item = {
            Immediately: "immediately",
            Daily: "daily",
            Weekly: "weekly",
            Monthly: "monthly",
        } as const;
    }

    /**
     * The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard.
     *         Possible values: <code>standard</code>, <code>enhanced</code>.
     */
    export type Method = "standard" | "enhanced";
    export const Method = {
        Standard: "standard",
        Enhanced: "enhanced",
    } as const;
}
