/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Management from "../index.js";

export interface GetUserAuthenticationMethodResponseContent {
    /** The ID of the authentication method (auto generated) */
    id: string;
    type: Management.AuthenticationMethodTypeEnum;
    /** The authentication method status */
    confirmed?: boolean;
    /** A human-readable label to identify the authentication method */
    name?: string;
    authentication_methods?: Management.UserAuthenticationMethodProperties[];
    preferred_authentication_method?: Management.PreferredAuthenticationMethodEnum;
    /** The ID of a linked authentication method. Linked authentication methods will be deleted together. */
    link_id?: string;
    /** Applies to phone authentication methods only. The destination phone number used to send verification codes via text and voice. */
    phone_number?: string;
    /** Applies to email and email-verification authentication methods only. The email address used to send verification messages. */
    email?: string;
    /** Applies to webauthn authentication methods only. The ID of the generated credential. */
    key_id?: string;
    /** Applies to webauthn authentication methods only. The public key. */
    public_key?: string;
    /** Authenticator creation date */
    created_at: string;
    /** Enrollment date */
    enrolled_at?: string;
    /** Last authentication */
    last_auth_at?: string;
    /** Applies to passkeys only. The kind of device the credential is stored on as defined by backup eligibility. "single_device" credentials cannot be backed up and synced to another device, "multi_device" credentials can be backed up if enabled by the end-user. */
    credential_device_type?: string;
    /** Applies to passkeys only. Whether the credential was backed up. */
    credential_backed_up?: boolean;
    /** Applies to passkeys only. The ID of the user identity linked with the authentication method. */
    identity_user_id?: string;
    /** Applies to passkeys only. The user-agent of the browser used to create the passkey. */
    user_agent?: string;
}
