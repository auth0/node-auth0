/**
 * This file was auto-generated by Fern from our API Definition.
 */

import type { UserDateSchema } from "../types/UserDateSchema.js";
import type { UserIdentitySchema } from "../types/UserIdentitySchema.js";
import type { UserAppMetadataSchema } from "../types/UserAppMetadataSchema.js";
import type { UserMetadataSchema } from "../types/UserMetadataSchema.js";

export interface UpdateUserResponseContent {
    /** ID of the user which can be used when interacting with other APIs. */
    user_id?: string;
    /** Email address of this user. */
    email?: string;
    /** Whether this email address is verified (true) or unverified (false). */
    email_verified?: boolean;
    /** Username of this user. */
    username?: string;
    /** Phone number for this user. Follows the <a href="https://en.wikipedia.org/wiki/E.164">E.164 recommendation</a>. */
    phone_number?: string;
    /** Whether this phone number has been verified (true) or not (false). */
    phone_verified?: boolean;
    created_at?: UserDateSchema;
    updated_at?: UserDateSchema;
    /** Array of user identity objects when accounts are linked. */
    identities?: UserIdentitySchema[];
    app_metadata?: UserAppMetadataSchema;
    user_metadata?: UserMetadataSchema;
    /** URL to picture, photo, or avatar of this user. */
    picture?: string;
    /** Name of this user. */
    name?: string;
    /** Preferred nickname or alias of this user. */
    nickname?: string;
    /** List of multi-factor authentication providers with which this user has enrolled. */
    multifactor?: string[];
    /** Last IP address from which this user logged in. */
    last_ip?: string;
    last_login?: UserDateSchema;
    /** Total number of logins this user has performed. */
    logins_count?: number;
    /** Whether this user was blocked by an administrator (true) or is not (false). */
    blocked?: boolean;
    /** Given name/first name/forename of this user. */
    given_name?: string;
    /** Family name/last name/surname of this user. */
    family_name?: string;
    /** Accepts any additional properties */
    [key: string]: any;
}
