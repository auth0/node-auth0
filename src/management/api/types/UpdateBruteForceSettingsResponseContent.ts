/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface UpdateBruteForceSettingsResponseContent {
    /** Whether or not brute force attack protections are active. */
    enabled?: boolean;
    /**
     * Action to take when a brute force protection threshold is violated.
     *         Possible values: <code>block</code>, <code>user_notification</code>.
     */
    shields?: UpdateBruteForceSettingsResponseContent.Shields.Item[];
    /** List of trusted IP addresses that will not have attack protection enforced against them. */
    allowlist?: string[];
    /**
     * Account Lockout: Determines whether or not IP address is used when counting failed attempts.
     *           Possible values: <code>count_per_identifier_and_ip</code>, <code>count_per_identifier</code>.
     */
    mode?: UpdateBruteForceSettingsResponseContent.Mode;
    /** Maximum number of unsuccessful attempts. */
    max_attempts?: number;
}

export namespace UpdateBruteForceSettingsResponseContent {
    export type Shields = Shields.Item[];

    export namespace Shields {
        export type Item = "block" | "user_notification";
        export const Item = {
            Block: "block",
            UserNotification: "user_notification",
        } as const;
    }

    /**
     * Account Lockout: Determines whether or not IP address is used when counting failed attempts.
     *           Possible values: <code>count_per_identifier_and_ip</code>, <code>count_per_identifier</code>.
     */
    export type Mode = "count_per_identifier_and_ip" | "count_per_identifier";
    export const Mode = {
        CountPerIdentifierAndIp: "count_per_identifier_and_ip",
        CountPerIdentifier: "count_per_identifier",
    } as const;
}
