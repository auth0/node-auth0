/**
 * This file was auto-generated by Fern from our API Definition.
 */

import type { ResourceServerScope } from "../types/ResourceServerScope.js";
import type { SigningAlgorithmEnum } from "../types/SigningAlgorithmEnum.js";
import type { ResourceServerTokenDialectResponseEnum } from "../types/ResourceServerTokenDialectResponseEnum.js";
import type { ResourceServerTokenEncryption } from "../types/ResourceServerTokenEncryption.js";
import type { ResourceServerConsentPolicyEnum } from "../types/ResourceServerConsentPolicyEnum.js";
import type { ResourceServerProofOfPossession } from "../types/ResourceServerProofOfPossession.js";
import type { ResourceServerSubjectTypeAuthorization } from "../types/ResourceServerSubjectTypeAuthorization.js";

export interface CreateResourceServerResponseContent {
    /** ID of the API (resource server). */
    id?: string;
    /** Friendly name for this resource server. Can not contain `<` or `>` characters. */
    name?: string;
    /** Whether this is an Auth0 system API (true) or a custom API (false). */
    is_system?: boolean;
    /** Unique identifier for the API used as the audience parameter on authorization calls. Can not be changed once set. */
    identifier?: string;
    /** List of permissions (scopes) that this API uses. */
    scopes?: ResourceServerScope[];
    signing_alg?: SigningAlgorithmEnum;
    /** Secret used to sign tokens when using symmetric algorithms (HS256). */
    signing_secret?: string;
    /** Whether refresh tokens can be issued for this API (true) or not (false). */
    allow_offline_access?: boolean;
    /** Whether to skip user consent for applications flagged as first party (true) or not (false). */
    skip_consent_for_verifiable_first_party_clients?: boolean;
    /** Expiration value (in seconds) for access tokens issued for this API from the token endpoint. */
    token_lifetime?: number;
    /** Expiration value (in seconds) for access tokens issued for this API via Implicit or Hybrid Flows. Cannot be greater than the `token_lifetime` value. */
    token_lifetime_for_web?: number;
    /** Whether authorization polices are enforced (true) or unenforced (false). */
    enforce_policies?: boolean;
    token_dialect?: ResourceServerTokenDialectResponseEnum;
    token_encryption?: ResourceServerTokenEncryption;
    consent_policy?: ResourceServerConsentPolicyEnum | undefined;
    authorization_details?: unknown[];
    proof_of_possession?: ResourceServerProofOfPossession;
    subject_type_authorization?: ResourceServerSubjectTypeAuthorization;
    /** The client ID of the client that this resource server is linked to */
    client_id?: string;
}
