imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /device-credentials
      method: GET
      auth: true
      docs: >
        Retrieve device credential information (<code>public_key</code>,
        <code>refresh_token</code>, or <code>rotating_refresh_token</code>)
        associated with a specific user.
      pagination:
        offset: $request.page
        results: $response.device_credentials
      source:
        openapi: ../api.json
      display-name: Retrieve device credentials
      request:
        name: ListDeviceCredentialsRequestParameters
        query-parameters:
          page:
            type: optional<integer>
            docs: Page index of the results to return. First page is 0.
          per_page:
            type: optional<integer>
            default: 50
            docs: >-
              Number of results per page.  There is a maximum of 1000 results
              allowed from this endpoint.
          include_totals:
            type: optional<boolean>
            default: true
            docs: >-
              Return results inside an object that contains the total result
              count (true) or as a direct array of results (false, default).
          fields:
            type: optional<string>
            docs: >-
              Comma-separated list of fields to include or exclude (based on
              value provided for include_fields) in the result. Leave empty to
              retrieve all fields.
          include_fields:
            type: optional<boolean>
            docs: >-
              Whether specified fields are to be included (true) or excluded
              (false).
          user_id:
            type: optional<string>
            docs: user_id of the devices to retrieve.
          client_id:
            type: optional<string>
            docs: client_id of the devices to retrieve.
          type:
            type: optional<root.DeviceCredentialTypeEnum>
            docs: >-
              Type of credentials to retrieve. Must be `public_key`,
              `refresh_token` or `rotating_refresh_token`. The property will
              default to `refresh_token` when paging is requested
      response:
        docs: Device credentials successfully retrieved.
        type: root.ListDeviceCredentialsOffsetPaginatedResponseContent
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
      examples:
        - response:
            body:
              start: 1.1
              limit: 1.1
              total: 1.1
              device_credentials:
                - id: id
                  device_name: device_name
                  device_id: device_id
                  type: public_key
                  user_id: user_id
                  client_id: client_id
    createPublicKey:
      path: /device-credentials
      method: POST
      auth: true
      docs: >
        Create a device credential public key to manage refresh token rotation
        for a given <code>user_id</code>. Device Credentials APIs are designed
        for ad-hoc administrative use only and paging is by default enabled for
        GET requests.


        When refresh token rotation is enabled, the endpoint becomes consistent.
        For more information, read <a
        href="https://auth0.com/docs/get-started/tenant-settings/signing-keys">
        Signing Keys</a>.
      source:
        openapi: ../api.json
      display-name: Create a device public key credential
      request:
        name: CreatePublicKeyDeviceCredentialRequestContent
        body:
          properties:
            device_name:
              type: string
              docs: Name for this device easily recognized by owner.
              validation:
                minLength: 1
            type: root.DeviceCredentialPublicKeyTypeEnum
            value:
              type: string
              docs: Base64 encoded string containing the credential.
              validation:
                minLength: 1
            device_id:
              type: string
              docs: >-
                Unique identifier for the device. Recommend using <a
                href="http://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID">Android_ID</a>
                on Android and <a
                href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIDevice_Class/index.html#//apple_ref/occ/instp/UIDevice/identifierForVendor">identifierForVendor</a>.
              validation:
                maxLength: 36
            client_id:
              type: optional<string>
              docs: client_id of the client (application) this credential is for.
        content-type: application/json
      response:
        docs: Device credentials successfully created.
        type: root.CreatePublicKeyDeviceCredentialResponseContent
        status-code: 201
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.ConflictError
        - root.TooManyRequestsError
      examples:
        - request:
            device_name: device_name
            type: public_key
            value: value
            device_id: device_id
          response:
            body:
              id: id
    delete:
      path: /device-credentials/{id}
      method: DELETE
      auth: true
      docs: >-
        Permanently delete a device credential (such as a refresh token or
        public key) with the given ID.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: ID of the credential to delete.
      display-name: Delete a device credential
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
  source:
    openapi: ../api.json
