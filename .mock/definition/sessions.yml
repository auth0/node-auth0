imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get:
      path: /sessions/{id}
      method: GET
      auth: true
      docs: Retrieve session information.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: ID of session to retrieve
      display-name: Get session
      response:
        docs: The session was retrieved
        type: root.GetSessionResponseContent
        status-code: 200
      errors:
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              user_id: user_id
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              authenticated_at: '2024-01-15T09:30:00Z'
              idle_expires_at: '2024-01-15T09:30:00Z'
              expires_at: '2024-01-15T09:30:00Z'
              last_interacted_at: '2024-01-15T09:30:00Z'
              device:
                initial_user_agent: initial_user_agent
                initial_ip: initial_ip
                initial_asn: initial_asn
                last_user_agent: last_user_agent
                last_ip: last_ip
                last_asn: last_asn
              clients:
                - client_id: client_id
              authentication:
                methods:
                  - {}
              cookie:
                mode: non-persistent
    delete:
      path: /sessions/{id}
      method: DELETE
      auth: true
      docs: Delete a session by ID.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: ID of the session to delete.
      display-name: Delete session
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
    revoke:
      path: /sessions/{id}/revoke
      method: POST
      auth: true
      docs: Revokes a session by ID and all associated refresh tokens.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: ID of the session to revoke.
      display-name: Revokes a session
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
  source:
    openapi: ../api.json
