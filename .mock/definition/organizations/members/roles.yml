imports:
  root: ../../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /organizations/{id}/members/{user_id}/roles
      method: GET
      auth: true
      docs: >
        Retrieve detailed list of roles assigned to a given user within the
        context of a specific Organization. 


        Users can be members of multiple Organizations with unique roles
        assigned for each membership. This action only returns the roles
        associated with the specified Organization; any roles assigned to the
        user within other Organizations are not included.
      pagination:
        offset: $request.page
        results: $response.roles
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: Organization identifier.
        user_id:
          type: string
          docs: ID of the user to associate roles with.
      display-name: Get user roles assigned to an Organization member
      request:
        name: ListOrganizationMemberRolesRequestParameters
        query-parameters:
          page:
            type: optional<integer>
            docs: Page index of the results to return. First page is 0.
          per_page:
            type: optional<integer>
            default: 50
            docs: Number of results per page. Defaults to 50.
          include_totals:
            type: optional<boolean>
            default: true
            docs: >-
              Return results inside an object that contains the total result
              count (true) or as a direct array of results (false, default).
      response:
        docs: Roles successfully retrieved.
        type: root.ListOrganizationMemberRolesOffsetPaginatedResponseContent
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
            user_id: user_id
          response:
            body:
              start: 1.1
              limit: 1.1
              total: 1.1
              roles:
                - id: id
                  name: name
                  description: description
    assign:
      path: /organizations/{id}/members/{user_id}/roles
      method: POST
      auth: true
      docs: >
        Assign one or more <a
        href="https://auth0.com/docs/manage-users/access-control/rbac">roles</a>
        to a user to determine their access for a specific Organization.


        Users can be members of multiple Organizations with unique roles
        assigned for each membership. This action assigns roles to a user only
        for the specified Organization. Roles cannot be assigned to a user
        across multiple Organizations in the same call.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: Organization identifier.
        user_id:
          type: string
          docs: ID of the user to associate roles with.
      display-name: Assign user roles to an Organization member
      request:
        name: AssignOrganizationMemberRolesRequestContent
        body:
          properties:
            roles:
              docs: List of roles IDs to associated with the user.
              type: list<string>
        content-type: application/json
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.ConflictError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
            user_id: user_id
          request:
            roles:
              - roles
    delete:
      path: /organizations/{id}/members/{user_id}/roles
      method: DELETE
      auth: true
      docs: >
        Remove one or more Organization-specific <a
        href="https://auth0.com/docs/manage-users/access-control/rbac">roles</a>
        from a given user.


        Users can be members of multiple Organizations with unique roles
        assigned for each membership. This action removes roles from a user in
        relation to the specified Organization. Roles assigned to the user
        within a different Organization cannot be managed in the same call.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: Organization identifier.
        user_id:
          type: string
          docs: User ID of the organization member to remove roles from.
      display-name: Delete user roles from an Organization member
      request:
        name: DeleteOrganizationMemberRolesRequestContent
        body:
          properties:
            roles:
              docs: >-
                List of roles IDs associated with the organization member to
                remove.
              type: list<string>
        content-type: application/json
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
            user_id: user_id
          request:
            roles:
              - roles
  source:
    openapi: ../api.json
