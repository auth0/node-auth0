imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /connections
      method: GET
      auth: true
      docs: >
        Retrieves detailed list of all <a
        href="https://auth0.com/docs/authenticate/identity-providers">connections</a>
        that match the specified strategy. If no strategy is provided, all
        connections within your tenant are retrieved. This action can accept a
        list of fields to include or exclude from the resulting list of
        connections. 


        This endpoint supports two types of pagination:

        <ul>

        <li>Offset pagination</li>

        <li>Checkpoint pagination</li>

        </ul>


        Checkpoint pagination must be used if you need to retrieve more than
        1000 connections.


        <h2>Checkpoint Pagination</h2>


        To search by checkpoint, use the following parameters:

        <ul>

        <li><code>from</code>: Optional id from which to start selection.</li>

        <li><code>take</code>: The total amount of entries to retrieve when
        using the from parameter. Defaults to 50.</li>

        </ul>


        <b>Note</b>: The first time you call this endpoint using checkpoint
        pagination, omit the <code>from</code> parameter. If there are more
        results, a <code>next</code> value is included in the response. You can
        use this for subsequent API calls. When <code>next</code> is no longer
        included in the response, no pages are remaining.
      pagination:
        cursor: $request.from
        next_cursor: $response.next
        results: $response.connections
      source:
        openapi: ../api.json
      display-name: Get all connections
      request:
        name: ListConnectionsQueryParameters
        query-parameters:
          from:
            type: optional<string>
            docs: Optional Id from which to start selection.
          take:
            type: optional<integer>
            default: 50
            docs: Number of results per page. Defaults to 50.
          strategy:
            type: optional<root.ConnectionStrategyEnum>
            allow-multiple: true
            docs: >-
              Provide strategies to only retrieve connections with such
              strategies
          name:
            type: optional<string>
            docs: Provide the name of the connection to retrieve
          fields:
            type: optional<string>
            docs: >-
              A comma separated list of fields to include or exclude (depending
              on include_fields) from the result, empty to retrieve all fields
          include_fields:
            type: optional<boolean>
            docs: >-
              <code>true</code> if the fields specified are to be included in
              the result, <code>false</code> otherwise (defaults to
              <code>true</code>)
      response:
        docs: The connections were retrieved.
        type: root.ListConnectionsCheckpointPaginatedResponseContent
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
      examples:
        - response:
            body:
              next: next
              connections:
                - name: name
                  display_name: display_name
                  options:
                    key: value
                  id: id
                  strategy: strategy
                  realms:
                    - realms
                  is_domain_connection: true
                  show_as_button: true
                  metadata:
                    key: value
    create:
      path: /connections
      method: POST
      auth: true
      docs: >-
        Creates a new connection according to the JSON object received in
        <code>body</code>.<br/>
      source:
        openapi: ../api.json
      display-name: Create a connection
      request:
        name: CreateConnectionRequestContent
        body:
          properties:
            name:
              type: string
              docs: >-
                The name of the connection. Must start and end with an
                alphanumeric character and can only contain alphanumeric
                characters and '-'. Max length 128
              validation:
                maxLength: 128
            display_name:
              type: optional<string>
              docs: Connection name used in the new universal login experience
              validation:
                maxLength: 128
            strategy: root.ConnectionIdentityProviderEnum
            options: optional<root.ConnectionPropertiesOptions>
            enabled_clients:
              type: optional<list<string>>
              docs: >-
                DEPRECATED property. Use the PATCH /v2/connections/{id}/clients
                endpoint to enable the connection for a set of clients.
            is_domain_connection:
              type: optional<boolean>
              docs: >-
                <code>true</code> promotes to a domain-level connection so that
                third-party applications can use it. <code>false</code> does not
                promote the connection, so only first-party applications with
                the connection enabled can use it. (Defaults to
                <code>false</code>.)
            show_as_button:
              type: optional<boolean>
              docs: >-
                Enables showing a button for the connection in the login page
                (new experience only). If false, it will be usable only by HRD.
                (Defaults to <code>false</code>.)
            realms:
              type: optional<list<string>>
              docs: >-
                Defines the realms for which the connection will be used (ie:
                email domains). If the array is empty or the property is not
                specified, the connection name will be added as realm.
            metadata: optional<root.ConnectionsMetadata>
        content-type: application/json
      response:
        docs: The connection was created.
        type: root.CreateConnectionResponseContent
        status-code: 201
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.ConflictError
        - root.TooManyRequestsError
      examples:
        - request:
            name: name
            strategy: ad
          response:
            body:
              name: name
              display_name: display_name
              options:
                key: value
              id: id
              strategy: strategy
              realms:
                - realms
              enabled_clients:
                - enabled_clients
              is_domain_connection: true
              show_as_button: true
              metadata:
                key: value
    get:
      path: /connections/{id}
      method: GET
      auth: true
      docs: >-
        Retrieve details for a specified <a
        href="https://auth0.com/docs/authenticate/identity-providers">connection</a>
        along with options that can be used for identity provider configuration.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: The id of the connection to retrieve
      display-name: Get a connection
      request:
        name: GetConnectionRequestParameters
        query-parameters:
          fields:
            type: optional<string>
            docs: >-
              A comma separated list of fields to include or exclude (depending
              on include_fields) from the result, empty to retrieve all fields
          include_fields:
            type: optional<boolean>
            docs: >-
              <code>true</code> if the fields specified are to be included in
              the result, <code>false</code> otherwise (defaults to
              <code>true</code>)
      response:
        docs: The connection was retrieved.
        type: root.GetConnectionResponseContent
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              name: name
              display_name: display_name
              options:
                key: value
              id: id
              strategy: strategy
              realms:
                - realms
              enabled_clients:
                - enabled_clients
              is_domain_connection: true
              show_as_button: true
              metadata:
                key: value
    delete:
      path: /connections/{id}
      method: DELETE
      auth: true
      docs: >
        Removes a specific <a
        href="https://auth0.com/docs/authenticate/identity-providers">connection</a>
        from your tenant. This action cannot be undone. Once removed, users can
        no longer use this connection to authenticate.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: The id of the connection to delete
      display-name: Delete a connection
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
    update:
      path: /connections/{id}
      method: PATCH
      auth: true
      docs: >-
        Update details for a specific <a
        href="https://auth0.com/docs/authenticate/identity-providers">connection</a>,
        including option properties for identity provider configuration.


        <b>Note</b>: If you use the <code>options</code> parameter, the entire
        <code>options</code> object is overriden. To avoid partial data or other
        issues, ensure all parameters are present when using this option.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: The id of the connection to update
      display-name: Update a connection
      request:
        name: UpdateConnectionRequestContent
        body:
          properties:
            display_name:
              type: optional<string>
              docs: >-
                The connection name used in the new universal login experience.
                If display_name is not included in the request, the field will
                be overwritten with the name value.
              validation:
                maxLength: 128
            options: optional<root.UpdateConnectionOptions>
            enabled_clients:
              type: optional<list<string>>
              docs: >-
                DEPRECATED property. Use the PATCH /v2/connections/{id}/clients
                endpoint to enable or disable the connection for any clients.
            is_domain_connection:
              type: optional<boolean>
              docs: >-
                <code>true</code> promotes to a domain-level connection so that
                third-party applications can use it. <code>false</code> does not
                promote the connection, so only first-party applications with
                the connection enabled can use it. (Defaults to
                <code>false</code>.)
            show_as_button:
              type: optional<boolean>
              docs: >-
                Enables showing a button for the connection in the login page
                (new experience only). If false, it will be usable only by HRD.
                (Defaults to <code>false</code>.)
            realms:
              type: optional<list<string>>
              docs: >-
                Defines the realms for which the connection will be used (ie:
                email domains). If the array is empty or the property is not
                specified, the connection name will be added as realm.
            metadata: optional<root.ConnectionsMetadata>
        content-type: application/json
      response:
        docs: The connection was updated.
        type: root.UpdateConnectionResponseContent
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              name: name
              display_name: display_name
              options:
                key: value
              id: id
              strategy: strategy
              realms:
                - realms
              enabled_clients:
                - enabled_clients
              is_domain_connection: true
              show_as_button: true
              metadata:
                key: value
    checkStatus:
      path: /connections/{id}/status
      method: GET
      auth: true
      docs: >-
        Retrieves the status of an ad/ldap connection referenced by its
        <code>ID</code>. <code>200 OK</code> http status code response is
        returned  when the connection is online, otherwise a <code>404</code>
        status code is returned along with an error message
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: ID of the connection to check
      display-name: Check connection status
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
  source:
    openapi: ../api.json
