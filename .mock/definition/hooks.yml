imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /hooks
      method: GET
      auth: true
      docs: >
        Retrieve all <a href="https://auth0.com/docs/hooks">hooks</a>. Accepts a
        list of fields to include or exclude in the result.
      pagination:
        offset: $request.page
        results: $response.hooks
      source:
        openapi: ../api.json
      display-name: Get hooks
      request:
        name: ListHooksRequestParameters
        query-parameters:
          page:
            type: optional<integer>
            docs: Page index of the results to return. First page is 0.
          per_page:
            type: optional<integer>
            default: 50
            docs: Number of results per page.
          include_totals:
            type: optional<boolean>
            default: true
            docs: >-
              Return results inside an object that contains the total result
              count (true) or as a direct array of results (false, default).
          enabled:
            type: optional<boolean>
            docs: >-
              Optional filter on whether a hook is enabled (true) or disabled
              (false).
          fields:
            type: optional<string>
            docs: >-
              Comma-separated list of fields to include in the result. Leave
              empty to retrieve all fields.
          triggerId:
            type: optional<root.HookTriggerIdEnum>
            docs: Retrieves hooks that match the trigger
      response:
        docs: Hooks successfully retrieved.
        type: root.ListHooksOffsetPaginatedResponseContent
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
      examples:
        - response:
            body:
              start: 1.1
              limit: 1.1
              total: 1.1
              hooks:
                - triggerId: triggerId
                  id: id
                  name: name
                  enabled: true
                  script: script
                  dependencies:
                    key: value
    create:
      path: /hooks
      method: POST
      auth: true
      docs: |
        Create a new hook.
      source:
        openapi: ../api.json
      display-name: Create a hook
      request:
        name: CreateHookRequestContent
        body:
          properties:
            name:
              type: string
              docs: Name of this hook.
              default: my-hook
            script:
              type: string
              docs: Code to be executed when this hook runs.
              default: >-
                module.exports = function(client, scope, audience, context, cb)
                cb(null, access_token); };
              validation:
                minLength: 1
            enabled:
              type: optional<boolean>
              docs: Whether this hook will be executed (true) or ignored (false).
              default: false
            dependencies: optional<root.HookDependencies>
            triggerId: root.HookTriggerIdEnum
        content-type: application/json
      response:
        docs: Hook successfully created.
        type: root.CreateHookResponseContent
        status-code: 201
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.ConflictError
        - root.TooManyRequestsError
      examples:
        - request:
            name: name
            script: script
            triggerId: credentials-exchange
          response:
            body:
              triggerId: triggerId
              id: id
              name: name
              enabled: true
              script: script
              dependencies:
                key: value
    get:
      path: /hooks/{id}
      method: GET
      auth: true
      docs: >
        Retrieve <a href="https://auth0.com/docs/hooks">a hook</a> by its ID.
        Accepts a list of fields to include in the result.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: ID of the hook to retrieve.
      display-name: Get a hook
      request:
        name: GetHookRequestParameters
        query-parameters:
          fields:
            type: optional<string>
            docs: >-
              Comma-separated list of fields to include in the result. Leave
              empty to retrieve all fields.
      response:
        docs: Hook successfully retrieved.
        type: root.GetHookResponseContent
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              triggerId: triggerId
              id: id
              name: name
              enabled: true
              script: script
              dependencies:
                key: value
    delete:
      path: /hooks/{id}
      method: DELETE
      auth: true
      docs: |
        Delete a hook.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: ID of the hook to delete.
      display-name: Delete a hook
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
    update:
      path: /hooks/{id}
      method: PATCH
      auth: true
      docs: |
        Update an existing hook.
      source:
        openapi: ../api.json
      path-parameters:
        id:
          type: string
          docs: ID of the hook to update.
      display-name: Update a hook
      request:
        name: UpdateHookRequestContent
        body:
          properties:
            name:
              type: optional<string>
              docs: Name of this hook.
              default: my-hook
            script:
              type: optional<string>
              docs: Code to be executed when this hook runs.
              default: >-
                module.exports = function(client, scope, audience, context, cb)
                cb(null, access_token); };
              validation:
                minLength: 1
            enabled:
              type: optional<boolean>
              docs: Whether this hook will be executed (true) or ignored (false).
              default: false
            dependencies: optional<root.HookDependencies>
        content-type: application/json
      response:
        docs: Hook successfully created.
        type: root.UpdateHookResponseContent
        status-code: 201
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              triggerId: triggerId
              id: id
              name: name
              enabled: true
              script: script
              dependencies:
                key: value
  source:
    openapi: ../api.json
