imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get:
      path: /emails/provider
      method: GET
      auth: true
      docs: >
        Retrieve details of the <a
        href="https://auth0.com/docs/customize/email/smtp-email-providers">email
        provider configuration</a> in your tenant. A list of fields to include
        or exclude may also be specified.
      source:
        openapi: ../api.json
      display-name: Get email provider
      request:
        name: GetEmailProviderRequestParameters
        query-parameters:
          fields:
            type: optional<string>
            docs: >-
              Comma-separated list of fields to include or exclude (dependent
              upon include_fields) from the result. Leave empty to retrieve
              `name` and `enabled`. Additional fields available include
              `credentials`, `default_from_address`, and `settings`.
          include_fields:
            type: optional<boolean>
            docs: >-
              Whether specified fields are to be included (true) or excluded
              (false).
      response:
        docs: Email provider successfully retrieved.
        type: root.GetEmailProviderResponseContent
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
      examples:
        - response:
            body:
              name: name
              enabled: true
              default_from_address: default_from_address
              credentials:
                api_user: api_user
                region: region
                smtp_host: smtp_host
                smtp_port: 1
                smtp_user: smtp_user
              settings:
                key: value
    create:
      path: /emails/provider
      method: POST
      auth: true
      docs: >
        Create an <a href="https://auth0.com/docs/email/providers">email
        provider</a>. The <code>credentials</code> object

        requires different properties depending on the email provider (which is
        specified using the <code>name</code> property):

        <ul>
          <li><code>mandrill</code> requires <code>api_key</code></li>
          <li><code>sendgrid</code> requires <code>api_key</code></li>
          <li>
            <code>sparkpost</code> requires <code>api_key</code>. Optionally, set <code>region</code> to <code>eu</code> to use
            the SparkPost service hosted in Western Europe; set to <code>null</code> to use the SparkPost service hosted in
            North America. <code>eu</code> or <code>null</code> are the only valid values for <code>region</code>.
          </li>
          <li>
            <code>mailgun</code> requires <code>api_key</code> and <code>domain</code>. Optionally, set <code>region</code> to
            <code>eu</code> to use the Mailgun service hosted in Europe; set to <code>null</code> otherwise. <code>eu</code> or
            <code>null</code> are the only valid values for <code>region</code>.
          </li>
          <li><code>ses</code> requires <code>accessKeyId</code>, <code>secretAccessKey</code>, and <code>region</code></li>
          <li>
            <code>smtp</code> requires <code>smtp_host</code>, <code>smtp_port</code>, <code>smtp_user</code>, and
            <code>smtp_pass</code>
          </li>
        </ul>

        Depending on the type of provider it is possible to specify
        <code>settings</code> object with different configuration

        options, which will be used when sending an email:

        <ul>
          <li>
            <code>smtp</code> provider, <code>settings</code> may contain <code>headers</code> object.
            <ul>
              <li>
                When using AWS SES SMTP host, you may provide a name of configuration set in
                <code>X-SES-Configuration-Set</code> header. Value must be a string.
              </li>
              <li>
                When using Sparkpost host, you may provide value for
                <code>X-MSYS_API</code> header. Value must be an object.
              </li>
            </ul>
          </li>
          <li>
            for <code>ses</code> provider, <code>settings</code> may contain <code>message</code> object, where you can provide
            a name of configuration set in <code>configuration_set_name</code> property. Value must be a string.
          </li>
        </ul>
      source:
        openapi: ../api.json
      display-name: Configure email provider
      request:
        name: CreateEmailProviderRequestContent
        body:
          properties:
            name: root.EmailProviderNameEnum
            enabled:
              type: optional<boolean>
              docs: Whether the provider is enabled (true) or disabled (false).
              default: true
            default_from_address:
              type: optional<string>
              docs: Email address to use as "from" when no other address specified.
            credentials: root.EmailProviderCredentialsSchema
            settings: >-
              optional<root.EmailSpecificProviderSettingsWithAdditionalProperties>
        content-type: application/json
      response:
        docs: Email provider successfully created.
        type: root.CreateEmailProviderResponseContent
        status-code: 201
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.ConflictError
        - root.TooManyRequestsError
      examples:
        - request:
            name: mailgun
            credentials:
              api_key: api_key
          response:
            body:
              name: name
              enabled: true
              default_from_address: default_from_address
              credentials:
                api_user: api_user
                region: region
                smtp_host: smtp_host
                smtp_port: 1
                smtp_user: smtp_user
              settings:
                key: value
    delete:
      path: /emails/provider
      method: DELETE
      auth: true
      docs: |
        Delete the email provider.
      source:
        openapi: ../api.json
      display-name: Delete email provider
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
      examples:
        - {}
    update:
      path: /emails/provider
      method: PATCH
      auth: true
      docs: >
        Update an <a href="https://auth0.com/docs/email/providers">email
        provider</a>. The <code>credentials</code> object

        requires different properties depending on the email provider (which is
        specified using the <code>name</code> property):

        <ul>
          <li><code>mandrill</code> requires <code>api_key</code></li>
          <li><code>sendgrid</code> requires <code>api_key</code></li>
          <li>
            <code>sparkpost</code> requires <code>api_key</code>. Optionally, set <code>region</code> to <code>eu</code> to use
            the SparkPost service hosted in Western Europe; set to <code>null</code> to use the SparkPost service hosted in
            North America. <code>eu</code> or <code>null</code> are the only valid values for <code>region</code>.
          </li>
          <li>
            <code>mailgun</code> requires <code>api_key</code> and <code>domain</code>. Optionally, set <code>region</code> to
            <code>eu</code> to use the Mailgun service hosted in Europe; set to <code>null</code> otherwise. <code>eu</code> or
            <code>null</code> are the only valid values for <code>region</code>.
          </li>
          <li><code>ses</code> requires <code>accessKeyId</code>, <code>secretAccessKey</code>, and <code>region</code></li>
          <li>
            <code>smtp</code> requires <code>smtp_host</code>, <code>smtp_port</code>, <code>smtp_user</code>, and
            <code>smtp_pass</code>
          </li>
        </ul>

        Depending on the type of provider it is possible to specify
        <code>settings</code> object with different configuration

        options, which will be used when sending an email:

        <ul>
          <li>
            <code>smtp</code> provider, <code>settings</code> may contain <code>headers</code> object.
            <ul>
              <li>
                When using AWS SES SMTP host, you may provide a name of configuration set in
                <code>X-SES-Configuration-Set</code> header. Value must be a string.
              </li>
              <li>
                When using Sparkpost host, you may provide value for
                <code>X-MSYS_API</code> header. Value must be an object.
              </li>
            </ul>
            for <code>ses</code> provider, <code>settings</code> may contain <code>message</code> object, where you can provide
            a name of configuration set in <code>configuration_set_name</code> property. Value must be a string.
          </li>
        </ul>
      source:
        openapi: ../api.json
      display-name: Update email provider
      request:
        name: UpdateEmailProviderRequestContent
        body:
          properties:
            name: optional<root.EmailProviderNameEnum>
            enabled:
              type: optional<boolean>
              docs: Whether the provider is enabled (true) or disabled (false).
            default_from_address:
              type: optional<string>
              docs: Email address to use as "from" when no other address specified.
            credentials: optional<root.EmailProviderCredentialsSchema>
            settings: >-
              optional<root.EmailSpecificProviderSettingsWithAdditionalProperties>
        content-type: application/json
      response:
        docs: Email provider successfully updated.
        type: root.UpdateEmailProviderResponseContent
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
      examples:
        - request: {}
          response:
            body:
              name: name
              enabled: true
              default_from_address: default_from_address
              credentials:
                api_user: api_user
                region: region
                smtp_host: smtp_host
                smtp_port: 1
                smtp_user: smtp_user
              settings:
                key: value
  source:
    openapi: ../api.json
